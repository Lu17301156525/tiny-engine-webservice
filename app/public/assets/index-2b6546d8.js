import { ConfigProvider as Oe, Popover as Ee, TabItem as He, Tabs as Ve, Tooltip as Ue } from "@opentiny/vue";
import Fe from "@opentiny/vue-design-smb";
import "@opentiny/vue-icon";
import "@opentiny/vue-locale";
import { tinySmbTheme as Ge } from "@opentiny/vue-theme/theme";
import We from "@opentiny/vue-theme/theme-tool";
import "prettier";
import "prettier/parser-babel";
import "prettier/parser-html";
import "prettier/parser-postcss";
import { computed as xe, createApp as De, createBlock as _, createCommentVNode as se, createElementBlock as u, createElementVNode as l, createVNode as L, Fragment as w, KeepAlive as Z, nextTick as we, normalizeClass as B, normalizeStyle as Ie, onMounted as Ne, onUnmounted as Ae, openBlock as s, popScopeId as Le, pushScopeId as Te, reactive as z, ref as k, renderList as x, resolveComponent as m, resolveDynamicComponent as I, Teleport as Se, vShow as G, watch as U, withCtx as F, withDirectives as W } from "vue";
import { $ as ye, a as Y, b as me, B as ue, c as te, D, d as K, e as be, f as ke, g as oe, I as Ce, i as ne, k as pe, L as he, M as Q, n as Pe, O as y, Q as ve, R as ge, T as ee, t as _e, u as de, w as fe, z as $, _ as E } from "./index-11692c7d.js";
import "./monaco-73815df4.js";
import { u as ze } from "./vendor-6a2a38e0.js";
import { a as A, q as ae, R as Be, U as Re, y as Me } from "./virtual_svg-icons-register-9a77a691.js";
import { _ as R } from "./_plugin-vue_export-helper-c27b6911.js";
const qe = { components: { ProgressBar: de }, setup() { const a = [], c = [], o = [], e = z({ showDeployBlock: !1 }); return A.toolbars.forEach(r => { r.align === "right" ? c.push(r) : r.align === "center" ? o.push(r) : a.push(r), r.id === "lock" && y().registerPluginApi({ Lock: r.api }), r.id === "save" && y().registerPluginApi({ save: r.api }) }), we(() => { e.showDeployBlock = !0 }), { leftBar: a, rightBar: c, centerBar: o, state: e } } }, je = { class: "tiny-engine-toolbar" }, Qe = { class: "toolbar-left" }, $e = { class: "toolbar-center" }, Ke = { class: "toolbar-right" }, Ze = { class: "progress" }; function Je(a, c, o, e, r, v) { const p = m("progress-bar"); return s(), u(w, null, [l("div", je, [l("div", Qe, [(s(!0), u(w, null, x(e.leftBar, t => (s(), _(I(t.component), { key: t.id }))), 128))]), l("div", $e, [(s(!0), u(w, null, x(e.centerBar, t => (s(), _(I(t.component), { key: t.id }))), 128))]), l("div", Ke, [(s(!0), u(w, null, x(e.rightBar, t => (s(), _(I(t.component), { key: t.id }))), 128))])]), l("div", Ze, [e.state.showDeployBlock ? (s(), _(p, { key: 0 })) : se("", !0)])], 64) } const Xe = R(qe, [["render", Je], ["__scopeId", "data-v-5c776e5d"]]), Ye = "" + new URL("AI-cda2f9f2.png", import.meta.url).href; const en = { components: { TinyPopover: Ee, TinyTooltip: Ue, PublicIcon: pe }, props: { renderPanel: { type: String } }, emits: ["click", "node-click"], setup(a, { emit: c }) { const o = A.plugins, e = {}, r = {}, v = k(null), p = k(!1), t = k(null), { isTemporaryPage: n } = _e(), i = "EditorHelp", { pluginState: h, registerPluginApi: q, layoutState: { plugins: S } } = y(); A.plugins.forEach(({ id: d, component: g, api: f, icon: P }) => { e[d] = g, r[d] = P, f && q({ [d]: f }) }); const b = k(!1), C = z({ prevIdex: -2, topNavLists: o.filter(d => d.align === "top"), bottomNavLists: o.filter(d => d.align === "bottom"), independence: o.find(d => d.align === "independence") }), V = () => { b.value || (b.value = !0, y().closePlugin()) }, H = ({ item: d, index: g }) => { var P; if (d.id === i) return; C.prevIdex = g; const f = o.find(T => T.id === a.renderPanel); if (a.renderPanel && (f != null && f.confirm)) { const T = re => re && c("click", { item: d, navLists: d.align === "top" ? C.topNavLists[g] : C.bottomNavLists[g] }); (P = v.value) == null || P[f.confirm](T) } else c("click", { item: d, navLists: d.align === "top" ? C.topNavLists[g] : C.bottomNavLists[g] }) }; return U(n, () => { var d, g; if (n.saved) { const f = ((d = C.topNavLists) == null ? void 0 : d.find(T => T.id === "AppManage")) || null, P = ((g = C.topNavLists) == null ? void 0 : g.findIndex(T => T.id === "AppManage")) || -1; f !== a.renderPanel && H({ item: f, index: P }) } }), { state: C, clickMenu: H, openAIRobot: () => { t.value = e.Robot, p.value = !p.value }, pluginRef: v, robotVisible: p, robotComponent: t, close: () => { C.prevIdex = -2, y().closePlugin(!0) }, fixPanel: d => { var g, f; S.fixedPanels = (g = S.fixedPanels) != null && g.includes(d) ? (f = S.fixedPanels) == null ? void 0 : f.filter(P => P !== d) : [...S.fixedPanels, d] }, pluginsState: S, components: e, iconComponents: r, completed: b, doCompleted: V, pluginState: h } } }, ie = a => (Te("data-v-a01c2967"), a = a(), Le(), a), nn = { class: "nav-panel-lists top" }, tn = ["title", "onClick"], on = { class: "item-icon" }, sn = { class: "nav-panel-lists bottom" }, an = ie(() => l("li", { style: { flex: "1" }, class: "list-item" }, null, -1)), ln = ["title", "onClick"], cn = { class: "item-icon" }, rn = ["title"], dn = ie(() => l("div", null, [l("span", { class: "item-icon" }, [l("img", { class: "chatgpt-icon", src: Ye })])], -1)), pn = [dn], _n = { class: "left-panel-wrap" }, un = { key: 0, class: "robot-dialog" }; function gn(a, c, o, e, r, v) { const p = m("svg-icon"), t = m("public-icon"); return s(), u(w, null, [l("div", { id: "tiny-engine-nav-panel", style: Ie({ "pointer-events": e.pluginState.pluginEvent }) }, [l("ul", nn, [(s(!0), u(w, null, x(e.state.topNavLists, (n, i) => (s(), u("li", { key: i, class: B({ "list-item": !0, "first-item": i === 0, active: n.id === o.renderPanel, prev: e.state.prevIdex - 1 === i }), title: n.title, onClick: h => e.clickMenu({ item: n, index: i }) }, [l("div", null, [l("span", on, [typeof e.iconComponents[n.id] == "string" ? (s(), _(p, { key: 0, name: e.iconComponents[n.id], class: "panel-icon" }, null, 8, ["name"])) : (s(), _(I(e.iconComponents[n.id]), { key: 1, class: "panel-icon" }))])])], 10, tn))), 128))]), l("ul", sn, [an, (s(!0), u(w, null, x(e.state.bottomNavLists, (n, i) => (s(), u("li", { key: i, class: B(["list-item", { active: o.renderPanel === n.id, prev: e.state.prevIdex - 1 === i, "first-item": i === 0 }]), title: n.title, onClick: h => e.clickMenu({ item: n, index: i }) }, [l("div", { class: B({ "is-show": o.renderPanel }) }, [l("span", cn, [typeof e.iconComponents[n.id] == "string" ? (s(), _(t, { key: 0, name: e.iconComponents[n.id], class: "panel-icon", svgClass: "panel-svg" }, null, 8, ["name"])) : (s(), _(I(e.iconComponents[n.id]), { key: 1, class: "panel-icon" }))])], 2)], 10, ln))), 128)), (s(), u("li", { key: e.state.bottomNavLists.length + 1, class: B(["list-item"]), title: e.state.independence.title, onClick: c[0] || (c[0] = (...n) => e.openAIRobot && e.openAIRobot(...n)) }, pn, 8, rn))])], 4), W(l("div", { id: "tiny-engine-left-panel", class: B([o.renderPanel, { "is-fixed": e.pluginsState.fixedPanels.includes(o.renderPanel) }]) }, [l("div", _n, [(s(), _(Z, null, [(s(), _(I(e.components[o.renderPanel]), { ref: "pluginRef", "fixed-panels": e.pluginsState.fixedPanels, onClose: e.close, onFixPanel: e.fixPanel }, null, 40, ["fixed-panels", "onClose", "onFixPanel"]))], 1024))])], 2), [[G, o.renderPanel && e.components[o.renderPanel]]]), (s(), _(Se, { to: "body" }, [e.robotVisible ? (s(), u("div", un, [(s(), _(Z, null, [(s(), _(I(e.robotComponent), { onCloseChat: c[1] || (c[1] = n => e.robotVisible = !1) }, null, 32))], 1024))])) : se("", !0)]))], 64) } const fn = R(en, [["render", gn], ["__scopeId", "data-v-a01c2967"]]); const { PAGE_STATUS: J } = ee, X = new URLSearchParams(location.search).get("tenant") || "", mn = ne || te ? `canvas.html?tenant=${X}` : window.location.origin + window.location.pathname + `/canvas?tenant=${X}`, M = { Block: "区块", Page: "页面" }, vn = { components: { CanvasContainer: ue, FooterBar: ge }, setup() { const a = k([]), c = k(!0), o = k(null); let e = !1; const r = t => { const { pageState: n } = D(); a.value = K(t == null ? void 0 : t.id), n.currentSchema = {}, n.properties = null }; U([() => D().isSaved(), () => y().layoutState.pageStatus, () => D().getPageSchema()], ([t, n, i], [h, q, S]) => { if ([J.Guest, J.Occupy].includes(y().layoutState.pageStatus.state) || !(i != null && i.componentName)) return; const b = n == null ? void 0 : n.data, V = { empty: () => "应用下暂无页面，需新建页面后体验画布功能", release: N => `当前${M[N]}未锁定，点击右上角 “锁定” 图标后编辑${M[N]}`, lock: N => `当前${M[N]}被 ${b == null ? void 0 : b.username} ${b == null ? void 0 : b.resetPasswordToken} 锁定，如需编辑请先联系他解锁文件，然后再锁定该${M[N]}后编辑！` }[n.state](i.componentName); if (!(!t || i !== S) || e) return; const j = () => { $().go(-1, !1), D().setSaved(!0), r() }, O = () => { e = !1, !t && h && j() }; e = !0, Y().confirm({ title: "提示", message: V, status: "info", exec: O, cancel: O, hide: () => { e = !1 } }) }); const v = (t, n, i) => { const { toolbars: h } = y().layoutState; i !== "clickTree" && y().closePlugin(), ve().getProps(t, n), D().setCurrentSchema(t), a.value = K(t == null ? void 0 : t.id), h.visiblePopover = !1 }, p = ({ node: t }) => { he(t) }; return Ne(() => { document.addEventListener("canvasResize", Q), new ResizeObserver(Q).observe(o.value) }), { removeNode: r, canvasUrl: mn, nodeSelected: v, selectFooterNode: p, footData: a, materialsPanel: ae.component, showMask: c, controller: { getMaterial: E().getMaterial, addHistory: $().addHistory, registerBlock: E().registerBlock, request: fe(), ast: me }, canvasRef: o } } }, hn = { id: "canvas-wrap", ref: "canvasRef" }, yn = { ref: "siteCanvas", class: "site-canvas" }; function bn(a, c, o, e, r, v) { const p = m("canvas-container"), t = m("footer-bar"); return s(), u("div", hn, [l("div", yn, [L(p, { controller: e.controller, "materials-panel": e.materialsPanel, "canvas-src": e.canvasUrl, onRemove: e.removeNode, onSelected: e.nodeSelected }, null, 8, ["controller", "materials-panel", "canvas-src", "onRemove", "onSelected"])], 512), L(t, { data: e.footData, onClick: e.selectFooterNode }, null, 8, ["data", "onClick"])], 512) } const Cn = R(vn, [["render", bn], ["__scopeId", "data-v-2df83c9b"]]); const kn = { components: { TinyTabs: Ve, TinyTabItem: He }, setup() { const { layoutState: a } = y(), c = A && A.settings, o = xe(() => a.settings.activating); return { showMask: k(!0), settings: c, activating: o, layoutState: a } } }, Pn = { id: "tiny-right-panel" }, wn = { class: "active" }; function In(a, c, o, e, r, v) { const p = m("tiny-tab-item"), t = m("tiny-tabs"); return s(), u("div", Pn, [L(t, { modelValue: e.layoutState.settings.render, "onUpdate:modelValue": c[0] || (c[0] = n => e.layoutState.settings.render = n), "tab-style": "button-card" }, { default: F(() => [(s(!0), u(w, null, x(e.settings, (n, i) => (s(), _(p, { key: i, title: n.title, name: n.name }, { default: F(() => [(s(), _(I(n.component))), W(l("div", wn, null, 512), [[G, e.activating]])]), _: 2 }, 1032, ["title", "name"]))), 128))]), _: 1 }, 8, ["modelValue"])]) } const Sn = R(kn, [["render", In], ["__scopeId", "data-v-cd1e6367"]]); const { message: Tn } = Y(), { requestInitBlocks: Ln } = Be.api, { fetchGroups: Nn } = ae.api, { BROADCAST_CHANNEL: xn } = ee, An = { name: "TinyLowCode", components: { DesignToolbars: Xe, DesignPlugins: fn, DesignCanvas: Cn, DesignSettings: Sn, TinyConfigProvider: Oe }, provide() { return { editor: this } }, setup() { const a = z({ globalClass: "", rightWidth: "", leftWidfth: "", preNode: Re, jsClose: null }), { layoutState: c } = y(), { plugins: o } = c, e = k(null), { data: r } = ze({ name: xn.Notify }); U(r, t => ye(t)), U(() => a.jsClose, () => { a.preNode && (o.render = a.preNode.id) }); const v = ({ item: t, navLists: n }) => { n && (a.preNode = n), t.id && (o.render = o.render === t.id ? null : t.id) }; be().getUserInfo(), E().fetchResource(); const p = () => { E().handlePopStateEvent() }; if (window.addEventListener("popstate", p), ne) { const t = Ce().appInfoState.selectedId; Nn(t).then(n => { const i = []; n.forEach(h => { i.push(...h.blocks) }), Ln(i) }).catch(n => { Tn({ message: n.message, status: "error" }) }) } return Ae(() => { window.removeEventListener("popstate", p) }), { state: a, right: e, plugins: o, toggleNav: v, addons: A, layoutState: c, designSmbConfig: Fe } } }, Dn = { id: "tiny-engine" }, Bn = { class: "tiny-engine-main" }, Rn = { class: "tiny-engine-left-wrap" }, Mn = { class: "tiny-engine-content-wrap" }, En = { class: "tiny-engine-right-wrap" }; function Un(a, c, o, e, r, v) { const p = m("design-toolbars"), t = m("design-plugins"), n = m("design-canvas"), i = m("design-settings"), h = m("tiny-config-provider"); return s(), _(h, { design: e.designSmbConfig }, { default: F(() => [l("div", Dn, [L(p), l("div", Bn, [l("div", Rn, [l("div", Mn, [L(t, { "render-panel": e.plugins.render, onClick: e.toggleNav }, null, 8, ["render-panel", "onClick"]), L(n)])]), l("div", En, [W(L(i, { ref: "right" }, null, 512), [[G, e.layoutState.settings.showDesignSettings]])])])])]), _: 1 }, 8, ["design"]) } const Vn = R(An, [["render", Un], ["__scopeId", "data-v-5f408d15"]]), le = { theme: "light", dslMode: "Vue", dslHost: "", toolbarOptions: [], pluginOptions: [], canvasOptions: { Angular: {}, Vue: { material: ["http://localhost:7011/mock/bundle.json"], scripts: [], styles: ["http://localhost7011/tiny-vue.css"] }, React: {}, HTML: {}, Flowchart: {} }, lifeCyclesOptions: { Angular: ["_constructor_", "ngOnInit", "ngOnChanges", "ngDoCheck", "ngAfterContentInit", "ngAfterContentChecked", "ngAfterViewInit", "ngAfterViewChecked", "ngOnDestroy"], Vue: ["setup", "onBeforeMount", "onMounted", "onBeforeUpdate", "onUpdated", "onBeforeUnmount", "onUnmounted", "onErrorCaptured", "onActivated", "onDeactivated"], HTML: [], React: ["componentWillMount", "componentDidMount", "componentWillReceiveProps", "shouldComponentUpdate", "componentWillUpdate", "componentDidUpdate", "componentWillUnmount"] }, lifeCycleTips: { Vue: "通过Vue解构出来的方法都可以在setup这里使用，比如watch、computed、watchEffect等" }, platformHost: "", appHost: "", materialHost: "", platformId: 897, defaultImportLayout: 1 }; new We(Ge, "smbtheme"); te || ke(); window.TinyGlobalConfig = le; Pe(le); const ce = De(Vn); Me(ce); window.lowcodeI18n = oe; ce.use(oe).mount("#app");
